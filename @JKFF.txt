module jkff(j,k,clk,q,qb);
input j,k,clk;
output q,qb;
reg[1:0] jk;
reg q=0,qb=1;
always@(posedge clk)
begin
jk={j,k};
case (jk)
2'b00:q=q;
2'b01:q=1'b0;
2'b10:q=1'b1;
2'b11:q=~q;
endcase
qb=~q;
end
 endmodule



module jkfftest;
reg j,k,clk;
wire q,qb;
jkff jk1(j,k,clk,q,qb);
initial clk=1'b0;
always #5 clk=~clk;
initial
begin
j=1'b0; k=1'b0;
#5 j=1'b0; #10 k=1'b1;
#5 j=1'b1;
#5 k=1'b0;
#5 j=1'b1;
#5 k=1'b1;
#20;
end
endmodule
