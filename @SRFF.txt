module srff(s,r,clk,q,qb);
input s,r,clk; output q,qb;
reg [1:0] sr; reg q,qb;
always @(posedge clk)
begin
sr={s,r};
case(sr)
2'b00:q=q;
2'b01:q=1'b0;
2'b10:q=1'b1;
2'b11:q=1'bx;
endcase
qb=~q;
end
 endmodule


module srfftest;
reg clk,s,r;
wire q,qb;
srff s1(s,r,clk,q,qb);
initial clk=1'b0;
always #5 clk=~clk;
initial
begin
#10 s=1'b0; r=1'b1;
#10 s=1'b1; r=1'b0;
#15 s=1'b0; r=1'b0;
#20 s=1'b1; r=1'b1;
#20;
end
endmodule